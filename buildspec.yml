version: 0.2

env:
  parameter-store:
    DOCKER_USER: DOCKER_HUB_ID
    DOCKER_PASSWORD: DOCKER_HUB_PASSWORD

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - pip3 install pytest pytest-cov requests

  pre_build:
    commands:
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin

  build:
    commands:
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker run -d -p 80:80 $IMAGE_REPO_NAME:$IMAGE_TAG
      - pwd
      - ls
      - mkdir reports
      - cd tests
      - python -m pytest --junitxml=../reports/pytest_results.xml
      - cd ../
      - pwd
      - ls
      - ls reports/
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG


  post_build:
    commands:
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
#      - printf "{"ImageURI":"$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"}" > imageDetail.json
#      - cat imageDetail.json


artifacts:
  files:
    - imagedefinitions.json
#    - imageDetail.json

reports:
  pytest_reports:
    files:
      - pytest_results.xml
    base-directory: reports/
    file-format: JUnitXML
